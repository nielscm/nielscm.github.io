{"version":3,"sources":["aws-exports.js","App.js","graphql/queries.js","reportWebVitals.js","index.js"],"names":["awsmobile","App","path","MarketLeafletMap","FridgeLeafletMap","Home","className","to","MarketPopupTemplate","props","f","feature","target","href","properties","website","marketnam","city","county","location","days","hours","season","started","useState","activeFeature","setActiveFeature","popupContent","setPopupContent","useEffect","geometry","Popup","position","coordinates","onClose","MapContainer","id","center","zoom","scrollWheelZoom","TileLayer","attribution","url","mapGeoJson","features","map","Marker","eventHandlers","undefined","FridgePopupTemplate","location_name","cross_streets","fridge","type","fridge_type","pantry","freezer","additions","length","setFeatures","a","GraphQLAPI","graphql","query","authMode","GRAPHQL_AUTH_MODE","API_KEY","response","data","getLocations","console","error","fetchData","Amplify","configure","awsExports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAYeA,EATG,CACd,mBAAsB,YACtB,4BAA+B,iFAC/B,mBAAsB,YACtB,+BAAkC,UAClC,mBAAsB,kC,wBCaX,SAASC,IACtB,OACE,cAAC,IAAD,UACE,8BAGE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,mBAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,mBAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,IAAZ,SACE,cAACG,EAAD,aAQZ,SAASA,IACP,OACE,sBAAKC,UAAU,OAAf,UACE,+CACA,8BACE,qBAAIA,UAAU,aAAd,UACE,+BACE,cAAC,IAAD,CAAMC,GAAG,mBAAT,6BACA,4HAEF,+BACE,cAAC,IAAD,CAAMA,GAAG,mBAAT,6BACA,kJAeZ,SAASC,EAAoBC,GAC3B,IAAMC,EAAID,EAAME,QAChB,OAAQ,sBAAKL,UAAU,gBAAf,UACR,gDACA,gCACE,kCACA,+BAAI,sCAAa,6BAAI,mBAAGM,OAAO,SAASC,KAAM,WAAaH,EAAEI,WAAWC,QAAnD,SAA6DL,EAAEI,WAAWE,iBAC/F,+BAAI,sCAAa,6BAAKN,EAAEI,WAAWG,UACnC,+BAAI,wCAAe,6BAAKP,EAAEI,WAAWI,YACrC,+BAAI,0CAAiB,6BAAKR,EAAEI,WAAWK,cACvC,+BAAI,sCAAa,6BAAKT,EAAEI,WAAWM,UACnC,+BAAI,uCAAc,6BAAKV,EAAEI,WAAWO,WACpC,+BAAI,wCAAe,6BAAKX,EAAEI,WAAWQ,YACnC,WACA,GAAIZ,EAAEI,WAAWS,QACf,OAAQ,+BAAI,yCAAgB,6BAAKb,EAAEI,WAAWS,aAFhD,WAWN,SAASpB,IACP,IAD0B,EAIgBqB,mBAAS,MAJzB,mBAInBC,EAJmB,KAIJC,EAJI,OAKcF,mBAAS,IALvB,mBAKnBG,EALmB,KAKLC,EALK,OAMMJ,qBANN,6BA6B1B,OArBAK,qBAAU,WAEJJ,GAAiBA,EAAcK,SAEjCF,EAAgB,cAACG,EAAA,EAAD,CACdC,SAAU,CACRP,EAAcK,SAASG,YAAY,GACnCR,EAAcK,SAASG,YAAY,IAErCC,QAAS,WACPR,EAAiB,OANL,SASd,cAAClB,EAAD,CAAqBG,QAASc,OAIhCG,EAAgB,MAEjB,CAACH,IAEI,8BACJ,eAACU,EAAA,EAAD,CAAcC,GAAG,cAAcC,OA7BpB,CAAC,OAAS,SA6B0BC,KA5BtC,GA4BkDC,iBAAiB,EAA5E,UACA,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAGJC,EAAcA,EAAWC,SAASC,KAAI,SAAAnC,GAAC,OACvC,cAACoC,EAAA,EAAD,CAEEd,SAAU,CACRtB,EAAEoB,SAASG,YAAY,GACvBvB,EAAEoB,SAASG,YAAY,IAEzBc,cAAe,CACb,MAAU,WACRrB,EAAiBhB,MAPhBA,EAAEI,WAAWsB,YAWjBY,EACJrB,OAWP,SAASsB,EAAoBxC,GAC3B,IAAMC,EAAID,EAAME,QAEhB,OAAQ,sBAAKL,UAAU,eAAf,UACR,oBAAIA,UAAU,sBAAd,SAAqCI,EAAEwC,gBACvC,mBAAG5C,UAAU,qBAAb,SAAmCI,EAAEyC,gBACrC,qBAAK7C,UAAU,wBAAf,SACE,+BACE,WACE,GAAiB,QAAbI,EAAE0C,OAAkB,CACtB,IAAMC,EAAQ3C,EAAE4C,YAAe5C,EAAE4C,YAAc,GAE/C,OAAQ,+BAAKD,EAAL,cAJZ,GAOA,WACA,GAAiB,QAAb3C,EAAE6C,OACJ,OAAQ,wCAFV,GAKA,WACA,GAAkB,QAAd7C,EAAE8C,QACJ,OAAQ,yCAFV,GAKA,WACA,GAAI9C,EAAE+C,WAAa/C,EAAE+C,UAAUC,QAAUhD,EAAE+C,UAAUC,OAAS,EAC5D,OAAQ,6BAAKhD,EAAE+C,YAFjB,WAUN,SAASrD,IACP,IAD0B,EAIgBoB,mBAAS,MAJzB,mBAInBC,EAJmB,KAIJC,EAJI,OAKcF,mBAAS,IALvB,mBAKnBG,EALmB,KAKLC,EALK,OAMMJ,qBANN,mBAMnBoB,EANmB,KAMTe,EANS,KAiD1B,OAzCA9B,qBAAU,WAEJJ,GAAiBA,EAAcK,SAEjCF,EAAgB,cAACG,EAAA,EAAD,CACdC,SAAU,CACRP,EAAcK,SAASG,YAAY,GACnCR,EAAcK,SAASG,YAAY,IAErCC,QAAS,WACPR,EAAiB,OANL,SASd,cAACuB,EAAD,CAAqBtC,QAASc,OAIhCG,EAAgB,MAEjB,CAACH,IAEJI,qBAAU,YAEO,uCAAG,8BAAA+B,EAAA,+EAESC,IAAWC,QAAQ,CACxCC,MC7Ne,oPD8NfC,SAAUC,IAAkBC,UAJhB,OAERC,EAFQ,OAORzD,EAAIyD,EAASC,KAAKC,aAExBV,EAAYjD,GATE,gDAWd4D,QAAQC,MAAM,QAAd,MAXc,yDAAH,qDAefC,KACA,IAEM,8BACJ,eAACrC,EAAA,EAAD,CAAcC,GAAG,cAAcC,OAjDpB,CAAC,OAAS,SAiD0BC,KAhDtC,GAgDkDC,iBAAiB,EAA5E,UACA,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAGJE,EAAYA,EAASC,KAAK,SAAAnC,GAAC,OAC3B,cAACoC,EAAA,EAAD,CAEEd,SAAU,CACRtB,EAAEoB,SAASG,YAAY,GACvBvB,EAAEoB,SAASG,YAAY,IAEzBc,cAAe,CACb,MAAU,WACRrB,EAAiBhB,MAPhBA,EAAE0B,YAWNY,EACJrB,OAjPP8C,UAAQC,UAAUC,GEnBlB,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fa3d8636.chunk.js","sourcesContent":["/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-west-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://facowochmzhqdeacskpi6ebfny.appsync-api.us-west-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-west-2\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-ryvx5xkdc5hgfb7yk5yyelhdfy\"\n};\n\n\nexport default awsmobile;\n","import { React, useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\n\r\nimport './App.css';\r\n\r\nimport mapGeoJson from './resources/geodata/farmers-markets-2012.json';\r\n\r\nimport Amplify from \"aws-amplify\";\r\nimport awsExports from \"./aws-exports\";\r\nimport GraphQLAPI, { GRAPHQL_AUTH_MODE } from '@aws-amplify/api-graphql';\r\nimport * as queries from \"./graphql/queries\";\r\n\r\nAmplify.configure(awsExports);\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/farmers-markets\">\r\n            <MarketLeafletMap />\r\n          </Route>\r\n          <Route path=\"/pdx-free-fridge\">\r\n            <FridgeLeafletMap />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className='home'>\r\n      <h2>Nielsen Demos</h2>\r\n      <nav>\r\n        <ul className='no-bullets'>\r\n          <li>\r\n            <Link to=\"/pdx-free-fridge\">PDX Free Fridge</Link>\r\n            <p>PDX Free Fridge GeoJSON from AWS AppSync and MongDB Atlas displayed over Open Street Map</p>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/farmers-markets\">Farmers Markets</Link>\r\n            <p>2012 Farmers Market Locations as GeoJSON displayed over Open Street Map in a React-Leaflet application</p>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*******\r\n * \r\n *  MARKETS DEMO\r\n * \r\n */\r\n\r\n\r\nfunction MarketPopupTemplate(props) {\r\n  const f = props.feature;\r\n  return (<div className='feature-popup'>\r\n  <h3>Farmers Market</h3>\r\n  <table>\r\n    <tbody>\r\n    <tr><td>Name</td><td><a target=\"_blank\" href={'https://' + f.properties.website}>{f.properties.marketnam}</a></td></tr>\r\n    <tr><td>City</td><td>{f.properties.city}</td></tr>\r\n    <tr><td>County</td><td>{f.properties.county}</td></tr>\r\n    <tr><td>Location</td><td>{f.properties.location}</td></tr>\r\n    <tr><td>Days</td><td>{f.properties.days}</td></tr>\r\n    <tr><td>Hours</td><td>{f.properties.hours}</td></tr>\r\n    <tr><td>Season</td><td>{f.properties.season}</td></tr>\r\n    {(() => {\r\n      if (f.properties.started) {\r\n        return (<tr><td>Started</td><td>{f.properties.started}</td></tr>)\r\n      }\r\n    })()}\r\n    </tbody>\r\n  </table>\r\n</div>)\r\n}\r\n\r\n\r\nfunction MarketLeafletMap() {\r\n  const latlng = [45.520, -122.625];\r\n  const zoom = 12;\r\n\r\n  const [activeFeature, setActiveFeature] = useState(null);\r\n  const [popupContent, setPopupContent] = useState('');\r\n  const [features, setFeatures] = useState();\r\n\r\n  useEffect(() => {\r\n    // console.log('active', activeFeature)\r\n    if (activeFeature && activeFeature.geometry) {\r\n      // console.log('set here')\r\n      setPopupContent(<Popup\r\n        position={[\r\n          activeFeature.geometry.coordinates[1],\r\n          activeFeature.geometry.coordinates[0]\r\n        ]}\r\n        onClose={() => {\r\n          setActiveFeature(null);\r\n        }}\r\n      >\r\n        <MarketPopupTemplate feature={activeFeature}/>\r\n      </Popup>)\r\n    } else {\r\n      // console.log('or here')\r\n      setPopupContent('')\r\n    }\r\n  }, [activeFeature]);\r\n\r\n  return (<div>\r\n      <MapContainer id='leaflet-map' center={latlng} zoom={zoom} scrollWheelZoom={false}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {/* { console.log(features )} */}\r\n      {(mapGeoJson) ? mapGeoJson.features.map(f => (\r\n        <Marker\r\n          key={f.properties.id}\r\n          position={[\r\n            f.geometry.coordinates[1],\r\n            f.geometry.coordinates[0]\r\n          ]}\r\n          eventHandlers={{\r\n            'click' : () => {\r\n              setActiveFeature(f);\r\n            }\r\n          }}\r\n        />\r\n      )) : undefined }\r\n      {popupContent}\r\n    </MapContainer>\r\n  </div>);\r\n}\r\n\r\n/*******\r\n * \r\n *  FRIDGE DEMO\r\n * \r\n */\r\n\r\nfunction FridgePopupTemplate(props) {\r\n  const f = props.feature;\r\n  // console.log('props', props)\r\n  return (<div className='fridge-popup'>\r\n  <h3 className='fridge-popup--title'>{f.location_name}</h3>\r\n  <p className='fridge-popup--desc'>{f.cross_streets}</p>\r\n  <div className='fridge-popup--content'>\r\n    <ul>\r\n    {(() => {\r\n        if (f.fridge === 'Yes') {\r\n          const type = (f.fridge_type) ? f.fridge_type : '';\r\n          // console.log('type', type, f)\r\n          return (<li>{type} Fridge</li>)\r\n        }\r\n    })()}\r\n    {(() => {\r\n      if (f.pantry === 'Yes') {\r\n        return (<li>Pantry</li>)\r\n      }\r\n    })()}\r\n    {(() => {\r\n      if (f.freezer === 'Yes') {\r\n        return (<li>Freezer</li>)\r\n      }\r\n    })()}\r\n    {(() => {\r\n      if (f.additions && f.additions.length && f.additions.length > 0) {\r\n        return (<li>{f.additions}</li>)\r\n      }\r\n    })()}\r\n    </ul>\r\n  </div>\r\n</div>)\r\n}\r\n\r\nfunction FridgeLeafletMap() {\r\n  const latlng = [45.520, -122.675];\r\n  const zoom = 10;\r\n\r\n  const [activeFeature, setActiveFeature] = useState(null);\r\n  const [popupContent, setPopupContent] = useState('');\r\n  const [features, setFeatures] = useState();\r\n\r\n  useEffect(() => {\r\n    // console.log('active', activeFeature)\r\n    if (activeFeature && activeFeature.geometry) {\r\n      // console.log('set here')\r\n      setPopupContent(<Popup\r\n        position={[\r\n          activeFeature.geometry.coordinates[1],\r\n          activeFeature.geometry.coordinates[0]\r\n        ]}\r\n        onClose={() => {\r\n          setActiveFeature(null);\r\n        }}\r\n      >\r\n        <FridgePopupTemplate feature={activeFeature}/>\r\n      </Popup>)\r\n    } else {\r\n      // console.log('or here')\r\n      setPopupContent('')\r\n    }\r\n  }, [activeFeature]);\r\n\r\n  useEffect(() => {\r\n    // console.log('use effects')\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await GraphQLAPI.graphql({\r\n          query: queries.getLocations,\r\n          authMode: GRAPHQL_AUTH_MODE.API_KEY\r\n        })\r\n        // console.log('response', response)\r\n        const f = response.data.getLocations;\r\n        // console.log(f)\r\n        setFeatures(f)\r\n      } catch (error) {\r\n        console.error('error', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  },[]);\r\n\r\n  return (<div>\r\n      <MapContainer id='leaflet-map' center={latlng} zoom={zoom} scrollWheelZoom={false}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {/* { console.log('features', features )} */}\r\n      {(features) ? features.map( f => (\r\n        <Marker\r\n          key={f.id}\r\n          position={[\r\n            f.geometry.coordinates[1],\r\n            f.geometry.coordinates[0]\r\n          ]}\r\n          eventHandlers={{\r\n            'click' : () => {\r\n              setActiveFeature(f);\r\n            }\r\n          }}\r\n        />\r\n      )) : undefined }\r\n      {popupContent}\r\n    </MapContainer>\r\n  </div>);\r\n}","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getLocations = /* GraphQL */ `\n  query GetLocations {\n    getLocations {\n      location_name\n      fridge\n      pantry\n      fridge_type\n      freezer\n      cross_streets\n      additions\n      geometry {\n        type\n        coordinates\n      }\n    }\n  }\n`;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}